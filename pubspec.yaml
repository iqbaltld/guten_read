# Project Metadata
name: guten_read
description: "A Flutter application that analyzes books from Project Gutenberg to extract and visualize character relationships using AI."

# Publish Configuration
# Prevents accidental publishing to pub.dev
# Remove or modify if you intend to publish the package
publish_to: 'none'

# Version Information
# Format: MAJOR.MINOR.PATCH+BUILD
# - MAJOR: Breaking changes
# - MINOR: New features, backward-compatible
# - PATCH: Bug fixes, no breaking changes
# - BUILD: Build number (auto-incremented by CI/CD)
version: 1.0.0+1

# Environment Constraints
# Defines the minimum required Dart SDK version
environment:
  sdk: '>=3.0.0 <4.0.0'  # Supports all Dart 3.x versions

# Dependencies
# All external packages required by the application
# Use `flutter pub outdated` to check for updates
dependencies:
  # Flutter SDK
  flutter:
    sdk: flutter

  # UI Components
  cupertino_icons: ^1.0.8  # iOS-style icons
  flutter_screenutil: ^5.9.3  # Responsive UI
  cached_network_image: ^3.4.1  # Image caching
  
  # State Management & Architecture
  flutter_bloc: ^9.1.1  # BLoC pattern
  equatable: ^2.0.7  # Value equality
  
  # Dependency Injection
  get_it: ^8.2.0  # Service locator
  injectable: ^2.5.1  # Code generation for get_it
  
  # Networking
  dio: ^5.8.0+1  # HTTP client
  
  # Local Storage
  shared_preferences: ^2.5.3  # Key-value storage
  
  # Utilities
  url_launcher: ^6.3.2  # Open URLs in browser
  intl: ^0.20.2  # Internationalization
  dartz: ^0.10.1  # Functional programming
  json_annotation: ^4.9.0  # JSON serialization
  connectivity_plus: ^6.1.5

dev_dependencies:
  # Testing
  flutter_test:
    sdk: flutter
  
  # Code Quality & Linting
  flutter_lints: ^5.0.0  # Recommended Flutter lints
  
  # Code Generation
  build_runner: ^2.6.0  # Runs code generators
  injectable_generator: ^2.8.1  # Generates DI code
  json_serializable: ^6.10.0  # Generates JSON serialization code

# Flutter Configuration
# This section contains Flutter-specific configurations

flutter:
  # Enables Material Design theming and components
  uses-material-design: true
  
  # To enable Flutter Web optimizations
  generate: true

  # To add assets to your application, add an assets section, like this:
  # assets:
  #   - images/a_dot_burr.jpeg
  #   - images/a_dot_ham.jpeg

  # An image asset can refer to one or more resolution-specific "variants", see
  # https://flutter.dev/to/resolution-aware-images

  # For details regarding adding assets from package dependencies, see
  # https://flutter.dev/to/asset-from-package

  # To add custom fonts to your application, add a fonts section here,
  # in this "flutter" section. Each entry in this list should have a
  # "family" key with the font family name, and a "fonts" key with a
  # list giving the asset and other descriptors for the font. For
  # example:
  # fonts:
  #   - family: Schyler
  #     fonts:
  #       - asset: fonts/Schyler-Regular.ttf
  #       - asset: fonts/Schyler-Italic.ttf
  #         style: italic
  #   - family: Trajan Pro
  #     fonts:
  #       - asset: fonts/TrajanPro.ttf
  #       - asset: fonts/TrajanPro_Bold.ttf
  #         weight: 700
  #
  # For details regarding fonts from package dependencies,
  # see https://flutter.dev/to/font-from-package
